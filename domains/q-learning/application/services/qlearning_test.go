package services

import (
	"testing"
)

var AllPossibilities map[int64]int64
var Data []StateData
var percentages = []int64{
	-7,
	16,
	50,
	-2,
	-16,
	-31,
	3,
	-39,
	4,
	10,
	0,
	21,
	1,
	12,
	1,
	-1,
	4,
	-10,
	-19,
	2,
	10,
	4,
	4,
	30,
	-14,
	19,
	28,
	-1,
	-14,
	5,
	8,
	-13,
	-3,
	1,
	-14,
	0,
	-1,
	-6,
	17,
	3,
	19,
	5,
	17,
	-20,
	25,
	-8,
	41,
	-35,
	-12,
	0,
	10,
	5,
	-26,
	11,
	-6,
	11,
	5,
	33,
	-6,
	-27,
	5,
	0,
	0,
	-12,
	-4,
	2,
	-10,
	14,
	9,
	12,
	15,
	13,
	8,
	-9,
	10,
	-13,
	3,
	-29,
	6,
	-15,
	11,
	4,
	-1,
	2,
	-13,
	-4,
	8,
	13,
	-6,
	12,
	0,
	11,
	15,
	8,
	3,
	-27,
	7,
	20,
	-8,
	-5,
	-13,
	6,
	-12,
	-3,
	-12,
	-9,
	0,
	10,
	3,
	0,
	16,
	0,
	-31,
	22,
	-15,
	-29,
	20,
	1,
	13,
	-1,
	10,
	7,
	-9,
	14,
	26,
	127,
	-86,
	-74,
	-63,
	19,
	-4,
	-8,
	-69,
	19,
	37,
	-1,
	-20,
	-24,
	38,
	59,
	-6,
	-30,
	23,
	35,
	24,
	19,
	54,
	10,
	-19,
	-31,
	30,
	0,
	-3,
	-32,
	35,
	-13,
	-27,
	10,
	3,
	83,
	-29,
	0,
	-14,
	8,
	38,
	-6,
	-13,
	51,
	17,
	15,
	1,
	8,
	-15,
	-20,
	25,
	40,
	33,
	-65,
	-29,
	-9,
	-22,
	1,
	-20,
	-10,
	45,
	-27,
	4,
	9,
	7,
	-11,
	11,
	-17,
	4,
	20,
	18,
	7,
	-39,
	-46,
	-20,
	-16,
	-8,
	-13,
	0,
	11,
	2,
	-2,
	0,
	1,
	30,
	-18,
	23,
	15,
	-17,
	-12,
	46,
	20,
	-6,
	10,
	28,
	-7,
	-26,
	-10,
	11,
	22,
	56,
	-107,
	7,
	49,
	56,
	-44,
	28,
	6,
	12,
	-72,
	46,
	-2,
	62,
	8,
	58,
	-37,
	37,
	96,
	56,
	7,
	39,
	11,
	-1,
	9,
	23,
	59,
	-56,
	11,
	39,
	7,
	32,
	-4,
	45,
	20,
	57,
	31,
	9,
	-3,
	-27,
	-87,
	38,
	65,
	-77,
	-9,
	-12,
	-59,
	52,
	18,
	-18,
	20,
	-10,
	-30,
	-20,
	37,
	-7,
	5,
	15,
	-18,
	12,
	-6,
	29,
	16,
	9,
	-5,
	-50,
	-13,
	28,
	-2,
	-4,
	14,
	-26,
	29,
	-11,
	0,
	-5,
	14,
	37,
	-1,
	-5,
	-17,
	16,
	13,
	2,
	13,
	-27,
	-2,
	8,
	15,
	1,
	-36,
	-7,
	-14,
	7,
	6,
	34,
	-18,
	36,
	23,
	1,
	-19,
	10,
	89,
	-55,
	-19,
	-12,
	37,
	-47,
	-39,
	-29,
	0,
	0,
	-37,
	10,
	-3,
	-2,
	-26,
	10,
	35,
	-26,
	2,
	4,
	-13,
	-15,
	-72,
	1,
	20,
	-54,
	35,
	32,
	-6,
	18,
	4,
	57,
	-31,
	-21,
	-28,
	13,
	34,
	4,
	-3,
	-3,
	10,
	-18,
	4,
	0,
	-23,
	-4,
	-3,
	-27,
	23,
	5,
	-28,
	7,
	42,
	-6,
	9,
	7,
	12,
	-6,
	-17,
	0,
	22,
	-11,
	4,
	-1,
	-19,
	15,
	-42,
	52,
	21,
	-11,
	33,
	2,
	-14,
	-30,
	11,
	6,
	-12,
	22,
	-28,
	-6,
	-2,
	-14,
	9,
	21,
	-16,
	-19,
	-68,
	-61,
	-22,
	-3,
	-32,
	-3,
	-1,
	33,
	-27,
	46,
	-6,
	4,
	24,
	15,
	10,
	2,
	28,
	-11,
	-13,
	-22,
	-36,
	24,
	2,
	2,
	-7,
	12,
	7,
	0,
	-7,
	-9,
	-46,
	3,
	-38,
	6,
	10,
	2,
	-11,
	2,
	23,
	6,
	20,
	0,
	-12,
	21,
	-33,
	-4,
	19,
	-2,
	-20,
	-46,
	-13,
	-32,
	18,
	38,
	-4,
	17,
	7,
	-27,
	9,
	34,
	-9,
	22,
	-9,
	-6,
	11,
	-8,
	-9,
	4,
	-22,
	31,
	3,
	38,
	-7,
	33,
	-21,
	-4,
	-5,
	-2,
	-5,
	2,
	8,
	11,
	-2,
	11,
	13,
	-15,
	-9,
	4,
	23,
	-15,
}

func init() {
	var buyArr, sellArr []int64
	AllPossibilities, buyArr, sellArr = GenerateSignalMap(100)

	for i := 99; i < len(percentages); i++ {
		data := []int64{}
		signal := int64(0)
		for j := i - 99; j < i; j++ {
			if percentages[j] > 0 {
				data = append(data, buyArr[i-j])
			} else {
				data = append(data, sellArr[i-j])
			}
			if i == j+99 {
				if percentages[j] > 0 {
					signal = 1
				} else {
					signal = -1
				}
			}
		}
		Data = append(Data, StateData{
			State:  data,
			Signal: signal,
		})
	}

}

func TestQLearning(t *testing.T) {

	agent := NewSimpleAgent(.7, 1)
	Learn(Data, agent, AllPossibilities, 40, 1000)
	return
}
